/*
 * Gradle build file for - enliven:authserivce as springboot based micro-service
 */

// buildscript is the 1st section before any declaration
buildscript {
    project.ext {
        contactEmail = 'lattewalk@gmail.com'
        springBootVersion = '1.4.7.RELEASE'
        stormpathVersion = '1.5.5'
        oauth2Version = '2.0.7.RELEASE'
        webjarVersion = '3.2.0'
    }

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${project.springBootVersion}")
    }
}

// Apply plugin to support in gradle
// plugins is the 2nd section before any declaration
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'


// build jar properties
jar {
    baseName = 'enliven-authservice'
    version = '0.0.1'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// In this section you declare where to find the dependencies of your project
repositories {
    // You can declare any Maven/Ivy/file repository here.

    // Use maven repo to solve the dependencies first
    mavenCentral()
    // Use jcenter for resolving your dependencies.
    jcenter()
}

// external library dependencies
dependencies {
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web:${project.springBootVersion}") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty:${project.springBootVersion}")
    // end::jetty[]

    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator:${project.springBootVersion}")
    // end::actuator[]

    //compile("org.springframework.boot:spring-boot-starter-aop:${project.springBootVersion}")
    //compile("org.springframework.boot:spring-boot-starter-data-jpa:${project.springBootVersion}")


    compile("org.springframework.boot:spring-boot-configuration-processor:${project.springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-security:${project.springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-social-facebook:${project.springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-social-linkedin:${project.springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-social-twitter:${project.springBootVersion}")
    compile("org.springframework.security.oauth:spring-security-oauth2:${project.oauth2Version}")
    //compile("com.stormpath.spring:stormpath-default-spring-boot-starter:${project.stormpathVersion}")

    compile("org.webjars:bootstrap:3.2.0")
    compile("org.webjars:jquery:2.1.1")
    compile("org.webjars:angularjs:1.4.3")
    compile("org.webjars:webjars-locator")

    compileOnly("org.projectlombok:lombok")
    //providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
    testCompile("org.springframework.boot:spring-boot-starter-test:${project.springBootVersion}")
    testCompile("junit:junit:4.12")
}

// Define the main class for the application
//mainClassName = 'ClientApplication'

// from boot plugin
//bootRun {
//    jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=4100,suspend=n','-Dspring.profiles.active=dev']
//}

// from java plugin
//run {
//    jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=4100,suspend=n','-Dspring.profiles.active=dev']
//}

task createWrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

task webjar(type: Jar, dependsOn: "jar") {
    from(fileTree("dist")) {
        into "META-INF/resources"
    }
}
